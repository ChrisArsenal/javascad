<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="JavaScad">
  <property environment="env"/>
  <property name="ECLIPSE_HOME" value="C:/Program Files/eclipse"/>
  <property name="debuglevel" value="source,lines,vars"/>
  <property name="target" value="1.7"/>
  <property name="source" value="1.7"/>
  <path id="JavaScad.classpath">
      <pathelement location="bin"/>
  </path>
  <path id="JavaScad.classpath.test">
    <pathelement location="bin" />
    <pathelement location="bin-test" />
    <pathelement location="lib/junit-4.11.jar"/>
    <pathelement location="lib/hamcrest-core-1.3.jar"/>
    <pathelement location="lib/easymock-3.0.jar"/>
    <pathelement location="lib/cglib-2.2.2.jar"/>
    <pathelement location="lib/objenesis-1.2.jar"/>
    <pathelement location="lib/asm-3.3.1.jar"/>
	<!-- PMD libs -->
    <pathelement location="lib/jaxen-1.1.1.jar"/>
    <pathelement location="lib/pmd-4.3.jar"/>
	<!-- checkstyle libs -->
    <pathelement location="lib/checkstyle-5.6-all.jar"/>
  </path>
  <target name="init">
      <mkdir dir="bin"/>
      <copy includeemptydirs="false" todir="bin">
          <fileset dir="src">
              <exclude name="**/*.launch"/>
              <exclude name="**/.svn"/>
              <exclude name="**/*.java"/>
          </fileset>
      </copy>
  </target>
  <target name="clean">
    <delete dir="bin"/>
  </target>
  <target name="clean-test">
      <delete dir="bin-test"/>
  </target>
  <target depends="clean,clean-test" name="cleanall">
      <delete dir="jar"/>
      <delete dir="docs"/>
  </target>
  <target depends="build-subprojects,build-project" name="build"/>
  <target name="build-subprojects"/>
  <target depends="init" name="build-project">
      <echo message="${ant.project.name}: ${ant.file}"/>
      <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}" includeantruntime="false">
          <src path="src"/>
          <classpath refid="JavaScad.classpath"/>
      </javac>
  </target>
  <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
  <target depends="build" name="jar">
    <jar destfile="jar/JavaScad.jar" basedir="bin" />
  </target>
  <target name="pmd-error">
    <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="JavaScad.classpath.test"/>
    <pmd shortFilenames="true" failOnRuleViolation="true" targetjdk="1.7">
      <ruleset>braces,basic,imports</ruleset>
      <formatter type="xml" toFile="pmd_error.xml" linkPrefix="http://pmd.sourceforge.net/xref/"/>
      <fileset dir="src">
        <include name="**/*.java"/>
      </fileset>
    </pmd>
  </target>
  <target name="pmd-warning">
    <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="JavaScad.classpath.test"/>
    <pmd shortFilenames="true" failOnRuleViolation="false" targetjdk="1.7">
      <ruleset>codesize,design</ruleset>
      <formatter type="xml" toFile="pmd_warning.xml" linkPrefix="http://pmd.sourceforge.net/xref/"/>
      <fileset dir="src">
        <include name="**/*.java"/>
      </fileset>
    </pmd>
  </target>
  <target depends="pmd-error" name="pmd">
    <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="JavaScad.classpath.test"/>
    <pmd shortFilenames="true" failOnRuleViolation="false" targetjdk="1.7">
      <ruleset>codesize,design</ruleset>
      <formatter type="html" toFile="pmd_output.html" linkPrefix="http://pmd.sourceforge.net/xref/"/>
      <fileset dir="src">
        <include name="**/*.java"/>
      </fileset>
    </pmd>
  </target>
  <target name="compile-test" depends="build">
    <mkdir dir="bin-test"/>
    <javac srcdir="test" destdir="bin-test" debug="true" includeantruntime="false">
      <classpath refid="JavaScad.classpath.test"/>
    </javac>
  </target>
  <target name="test" depends="compile-test">
    <mkdir dir="rawtestoutput"/>
    <junit fork="yes" forkmode="once" printsummary="true" failureProperty="test.failure">
      <classpath refid="JavaScad.classpath.test" />

      <batchtest todir="rawtestoutput">
        <formatter type="xml" />
        <fileset dir="bin-test" includes="**/*Test.class" />
      </batchtest>
    </junit>
    <mkdir dir="junit"/>
    <junitreport todir="junit">
        <fileset dir="rawtestoutput">
            <include name="TEST-*.xml"/>
        </fileset>
        <report format="frames" todir="junit"/>
    </junitreport>
    <fail message="test failed" if="test.failure" />
    <delete dir="rawtestoutput"/>
  </target>    
  <target name="test-with-coverage" depends="compile-test">
    <mkdir dir="rawtestoutput"/>
    <junit fork="yes" forkmode="once" printsummary="true" failureProperty="test.failure">
	  <sysproperty key="jmockit-coverage-excludes" value="(.+\.Test.+|.+\.testutils\..+)"/>
	  
      <classpath path="lib/jmockit.jar"/>
      <classpath path="lib/jmockit-coverage.jar"/>
      <classpath refid="JavaScad.classpath.test" />
      
      <batchtest todir="rawtestoutput">
        <formatter type="xml" />
        <fileset dir="bin-test" includes="**/*Test.class" />
      </batchtest>
    </junit>
    <mkdir dir="junit"/>
    <junitreport todir="junit">
        <fileset dir="rawtestoutput">
            <include name="TEST-*.xml"/>
        </fileset>
        <report format="frames" todir="junit"/>
    </junitreport>
    <fail message="test failed" if="test.failure" />
    <delete dir="rawtestoutput"/>
  </target>    
  <target name="javadoc">
    <javadoc
         destdir="docs"
         author="true"
         version="true"
         use="true"
         public="true"
         windowtitle="JavaSCAD API">
      <fileset dir="src" defaultexcludes="yes">
        <include name="eu/printingin3d/javascad/**"/>
      </fileset>

      <doctitle><![CDATA[<h1>JavaSCAD</h1>]]></doctitle>
      <bottom><![CDATA[<i>Copyright &#169; 2013 Printing In 3D. All Rights Reserved.</i>]]></bottom>
      <tag name="todo" scope="all" description="To do:"/>
    </javadoc>
    <zip destfile="jar/javadoc.zip"
           basedir="docs"
      />
  </target>
  <target name="find_revision" description="Sets property 'revision.number' to the head svn revision">
    <delete file="version.properties"/>
    
    <!-- find out revision number of HEAD, need svn.exe installed on local machine -->
    <exec executable="c:/Program Files/TortoiseSVN/bin/SubWCRev.exe">
        <arg line=". version.properties.template version.properties"/>
    </exec>
    
    <property file="version.properties"/>
    
    <fail unless="revision.number" />
    
    <echo>Revision found: ${revision.number}</echo>
  </target>
  <target name="dist" depends="find_revision,jar,javadoc">
    <delete file="jar/dist.rev${revision.number}.zip"/>
    <copy file="jar/javadoc.zip" tofile="jar/javadoc.rev${revision.number}.zip" />
    <copy file="jar/JavaScad.jar" tofile="jar/JavaScad.rev${revision.number}.jar" />
    <zip destfile="jar/dist.rev${revision.number}.zip" basedir="jar"
      includes="javadoc.rev${revision.number}.zip, JavaScad.rev${revision.number}.jar" />
    <delete file="jar/javadoc.rev${revision.number}.zip"/>
    <delete file="jar/JavaScad.rev${revision.number}.jar"/>
	<echo file="jar/version.text" append="false">${revision.number}</echo>
  </target>
  <target name="checkstyle">
    <taskdef resource="checkstyletask.properties" classpathref="JavaScad.classpath.test"/>
    <checkstyle config="checkstyle.xml" failonviolation="false">
      <fileset dir="src" includes="**/*.java"/>
      <formatter type="xml" toFile="checkstyle-result.xml"/>
    </checkstyle>
  </target>
  <target depends="cleanall,build,pmd-warning,pmd-error,checkstyle,test-with-coverage,dist" name="jenkins" />
</project>
